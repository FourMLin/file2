{"ast":null,"code":"export default {\n  name: 'FormInput',\n  props: {\n    'type': {\n      type: Object,\n      required: true\n    },\n    'Inputtype': {\n      type: String,\n      required: false,\n      default: 'text'\n    },\n    'text': {\n      type: String,\n      required: true\n    },\n    'tip': {\n      type: String,\n      required: true\n    },\n    'status': {\n      type: Object,\n      required: true\n    },\n    'errorvalue': {\n      type: String,\n      required: true\n    },\n    'innerBtn': {\n      type: Boolean,\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      value: '',\n      visibility: 'visibility',\n      type: 'password',\n      btnText: 'Show Password'\n    };\n  },\n\n  methods: {\n    ErrorValue() {\n      if (this.$props.status == 'error') {\n        return this.$props.errorvalue;\n      }\n    },\n\n    methods: {\n      showPassword() {\n        if (this.type === 'password') {\n          this.type = 'text';\n          this.btnText = 'Hide Password';\n        } else {\n          this.type = 'password';\n          this.btnText = 'Show Password';\n        }\n      }\n\n    } //   showPassword() {\n    //   if (this.$props.Inputtype == 'password') {\n    //     this.$props.Inputtype == 'text'\n    //     this.visibility == 'visibility_off'\n    //   } else {\n    //     this.$props.Inputtype == 'password'\n    //     this.visibility == 'visibility'\n    //   }\n    // }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":"AAyBE,eAAe;EACbA,IAAI,EAAE,WADO;EAEbC,KAAK,EAAE;IACL,QAAQ;MACNC,IAAI,EAAEC,MADA;MAENC,QAAQ,EAAE;IAFJ,CADH;IAKL,aAAa;MACXF,IAAI,EAAEG,MADK;MAEXD,QAAQ,EAAE,KAFC;MAGXE,OAAO,EAAC;IAHG,CALR;IAUL,QAAQ;MACNJ,IAAI,EAAEG,MADA;MAEND,QAAQ,EAAE;IAFJ,CAVH;IAcL,OAAO;MACLF,IAAI,EAAEG,MADD;MAELD,QAAQ,EAAE;IAFL,CAdF;IAkBL,UAAU;MACRF,IAAI,EAAEC,MADE;MAERC,QAAQ,EAAE;IAFF,CAlBL;IAsBL,cAAc;MACZF,IAAI,EAAEG,MADM;MAEZD,QAAQ,EAAE;IAFE,CAtBT;IA0BL,YAAY;MACVF,IAAI,EAAEK,OADI;MAEVH,QAAQ,EAAE;IAFA;EA1BP,CAFM;;EAmCbI,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,UAAU,EAAC,YAFN;MAGLR,IAAI,EAAE,UAHD;MAITS,OAAO,EAAE;IAJA,CAAP;EAMD,CA1CY;;EA2CbC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,KAAKC,MAAL,CAAYC,MAAZ,IAAsB,OAA1B,EAAmC;QACjC,OAAO,KAAKD,MAAL,CAAYE,UAAnB;MACF;IACD,CALM;;IAMPJ,OAAO,EAAE;MACXK,YAAY,GAAG;QACb,IAAG,KAAKf,IAAL,KAAc,UAAjB,EAA6B;UAC3B,KAAKA,IAAL,GAAY,MAAZ;UACA,KAAKS,OAAL,GAAe,eAAf;QACF,CAHA,MAGO;UACL,KAAKT,IAAL,GAAY,UAAZ;UACA,KAAKS,OAAL,GAAe,eAAf;QACF;MACF;;IATW,CANF,CAiBT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAzBS,CA3CI;EAuEbO,QAAQ,EAAE;AAvEG,CAAf","names":["name","props","type","Object","required","String","default","Boolean","data","value","visibility","btnText","methods","ErrorValue","$props","status","errorvalue","showPassword","computed"],"sourceRoot":"","sources":["D:\\Mywork\\simplemart\\src\\global\\components\\form\\input.vue"],"sourcesContent":["<template>\n  <div class=\"g-form-item\" :class=\"{'is-error' : status == 'error'}\" v-if=\"type == 'innerwords'\">\n    <form class=\"g-input-type\" :data-text=\"text\">\n      <input :type=\"Inputtype\" :placeholder=\"ErrorValue()\">\n      <div class=\"g-right-things\">\n        <span class=\"material-icons is-error\" v-if=\"status == 'error'\">error</span>\n        <span class=\"material-icons is-correct\" v-else-if=\"status == 'checked'\">check</span>\n        <template v-else></template>\n        <button class=\"g-btn g-btn-big g-btn-main\" v-if=\"innerBtn\">獲取手機驗證碼</button>\n        <span class=\"material-icons g-clean\" onclick=\"var input = this.parentElement.previousElementSibling; input.value = ''; input.focus();\" v-else-if=\"Inputtype == 'text'\">highlight_off</span>\n        <span class=\"material-icons\" v-if=\"Inputtype == 'password'\" @click=\"showPassword()\">{{visibility}}</span>\n        <input :type=\"type\" value=\"123456\">\n  \n  <button @click=\"showPassword\">{{ btnText }}</button>\n      </div>\n\n\n    </form>\n    <span class=\"g-input-tip\">{{tip}}</span>\n  </div>\n  <div class=\"g-form-item\" v-else>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'FormInput',\n    props: {\n      'type': {\n        type: Object,\n        required: true,\n      },\n      'Inputtype': {\n        type: String,\n        required: false,\n        default:'text'\n      },\n      'text': {\n        type: String,\n        required: true,\n      },\n      'tip': {\n        type: String,\n        required: true,\n      },\n      'status': {\n        type: Object,\n        required: true,\n      },\n      'errorvalue': {\n        type: String,\n        required: true,\n      },\n      'innerBtn': {\n        type: Boolean,\n        required: false\n      },\n\n    },\n\n    data() {\n      return {\n        value: '',\n        visibility:'visibility',\n        type: 'password',\n    btnText: 'Show Password'\n      }\n    },\n    methods: {\n      ErrorValue() {\n        if (this.$props.status == 'error') {\n          return this.$props.errorvalue\n        }\n      },\n      methods: {\n    showPassword() {\n      if(this.type === 'password') {\n        this.type = 'text'\n        this.btnText = 'Hide Password'\n      } else {\n        this.type = 'password'\n        this.btnText = 'Show Password'\n      }\n    }\n  }\n    //   showPassword() {\n    //   if (this.$props.Inputtype == 'password') {\n    //     this.$props.Inputtype == 'text'\n    //     this.visibility == 'visibility_off'\n    //   } else {\n    //     this.$props.Inputtype == 'password'\n    //     this.visibility == 'visibility'\n    //   }\n    // }\n\n    },\n    computed: {\n\n    }\n\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n  @import '@/global/scss/footer.scss';\n</style>"]},"metadata":{},"sourceType":"module"}
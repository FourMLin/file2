{"ast":null,"code":"export default {\n  name: 'FormInput',\n  props: {\n    'type': {\n      type: Object,\n      required: true\n    },\n    'Inputtype': {\n      type: String,\n      required: false,\n      default: 'text'\n    },\n    'text': {\n      type: String,\n      required: true\n    },\n    'Btntext': {\n      type: String,\n      required: false\n    },\n    'tip': {\n      type: String,\n      required: false\n    },\n    'status': {\n      type: Object,\n      required: false\n    },\n    'errorvalue': {\n      type: String,\n      required: false\n    },\n    'innerBtn': {\n      type: Boolean,\n      required: false\n    },\n    'style': {\n      type: Object,\n      required: false\n    },\n    'radioId': {\n      type: String,\n      required: false\n    },\n    'clicked': {\n      type: Boolean,\n      required: false\n    },\n    'name': {\n      type: String,\n      required: false\n    },\n    'under': {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    'underbox': {\n      type: Boolean,\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      value: '',\n      visibility: 'visibility',\n      btnclick: true\n    };\n  },\n\n  methods: {\n    ErrorValue() {\n      if (this.$props.status == 'error') {\n        return this.$props.errorvalue;\n      }\n    },\n\n    VerifyCode() {\n      if (!this.btnclick) {\n        return this.$props.Btntext = '重新發送(153)';\n      } else {\n        return this.$props.Btntext;\n      }\n    },\n\n    showPassword() {\n      const input = this.previousElement.$ref.input;\n\n      if (input.$props.Inputtype == 'password') {\n        input.$props.Inputtype = 'text';\n        this.visibility = 'visibility_off';\n      } else {\n        input.$props.Inputtype = 'password';\n        this.visibility = 'visibility';\n      }\n    }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":"AAsCE,eAAe;EACbA,IAAI,EAAE,WADO;EAEbC,KAAK,EAAE;IACL,QAAQ;MACNC,IAAI,EAAEC,MADA;MAENC,QAAQ,EAAE;IAFJ,CADH;IAKL,aAAa;MACXF,IAAI,EAAEG,MADK;MAEXD,QAAQ,EAAE,KAFC;MAGXE,OAAO,EAAE;IAHE,CALR;IAUL,QAAQ;MACNJ,IAAI,EAAEG,MADA;MAEND,QAAQ,EAAE;IAFJ,CAVH;IAcL,WAAW;MACTF,IAAI,EAAEG,MADG;MAETD,QAAQ,EAAE;IAFD,CAdN;IAkBL,OAAO;MACLF,IAAI,EAAEG,MADD;MAELD,QAAQ,EAAE;IAFL,CAlBF;IAsBL,UAAU;MACRF,IAAI,EAAEC,MADE;MAERC,QAAQ,EAAE;IAFF,CAtBL;IA0BL,cAAc;MACZF,IAAI,EAAEG,MADM;MAEZD,QAAQ,EAAE;IAFE,CA1BT;IA8BL,YAAY;MACVF,IAAI,EAAEK,OADI;MAEVH,QAAQ,EAAE;IAFA,CA9BP;IAkCL,SAAS;MACPF,IAAI,EAAEC,MADC;MAEPC,QAAQ,EAAE;IAFH,CAlCJ;IAsCL,WAAW;MACTF,IAAI,EAAEG,MADG;MAETD,QAAQ,EAAE;IAFD,CAtCN;IA0CL,WAAW;MACTF,IAAI,EAAEK,OADG;MAETH,QAAQ,EAAE;IAFD,CA1CN;IA8CL,QAAQ;MACNF,IAAI,EAAEG,MADA;MAEND,QAAQ,EAAE;IAFJ,CA9CH;IAkDL,SAAS;MACPF,IAAI,EAAEK,OADC;MAEPH,QAAQ,EAAE,KAFH;MAGPE,OAAO,EAAE;IAHF,CAlDJ;IAuDL,YAAY;MACVJ,IAAI,EAAEK,OADI;MAEVH,QAAQ,EAAE;IAFA;EAvDP,CAFM;;EAiEbI,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,UAAU,EAAE,YAFP;MAGLC,QAAQ,EAAC;IAHJ,CAAP;EAKD,CAvEY;;EAwEbC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,KAAKC,MAAL,CAAYC,MAAZ,IAAsB,OAA1B,EAAmC;QACjC,OAAO,KAAKD,MAAL,CAAYE,UAAnB;MACF;IACD,CALM;;IAMPC,UAAU,GAAG;MACX,IAAI,CAAC,KAAKN,QAAV,EAAoB;QAClB,OAAO,KAAKG,MAAL,CAAYI,OAAZ,GAAsB,WAA7B;MACF,CAFA,MAEO;QACL,OAAO,KAAKJ,MAAL,CAAYI,OAAnB;MACF;IACD,CAZM;;IAaPC,YAAY,GAAG;MACb,MAAMC,KAAI,GAAI,KAAKC,eAAL,CAAqBC,IAArB,CAA0BF,KAAxC;;MACA,IAAIA,KAAK,CAACN,MAAN,CAAaS,SAAb,IAA0B,UAA9B,EAA0C;QACxCH,KAAK,CAACN,MAAN,CAAaS,SAAb,GAAyB,MAAzB;QACA,KAAKb,UAAL,GAAkB,gBAAlB;MACF,CAHA,MAGO;QACLU,KAAK,CAACN,MAAN,CAAaS,SAAb,GAAyB,UAAzB;QACA,KAAKb,UAAL,GAAkB,YAAlB;MACF;IACF;;EAtBO,CAxEI;EAiGbc,QAAQ,EAAE;AAjGG,CAAf","names":["name","props","type","Object","required","String","default","Boolean","data","value","visibility","btnclick","methods","ErrorValue","$props","status","errorvalue","VerifyCode","Btntext","showPassword","input","previousElement","$ref","Inputtype","computed"],"sourceRoot":"","sources":["D:\\Mywork\\simplemart\\src\\global\\components\\form\\input.vue"],"sourcesContent":["<template>\n  <div class=\"g-form-item\" :class=\"{'is-error' : status == 'error'}\" v-if=\"type == 'innerwords'\">\n    <form class=\"g-input-type\" :data-text=\"text\">\n      <input :type=\"Inputtype\" ref=\"input\" :placeholder=\"ErrorValue()\">\n      <div class=\"g-right-things\">\n        <span class=\"material-icons is-error\" v-if=\"status == 'error'\">error</span>\n        <span class=\"material-icons is-correct\" v-else-if=\"status == 'checked'\">check</span>\n        <template v-else></template>\n        <div class=\"g-input-btn-group\" v-if=\"innerBtn\">\n          <div class=\"g-btn g-btn-big\" :class=\"{'g-btn-main' : btnclick , 'g-btn-gray' : !btnclick ,}\" @click=\"btnclick = !btnclick\">{{VerifyCode()}}</div>\n        </div>\n        <span class=\"material-icons g-icons\"\n          onclick=\"var input = this.parentElement.previousElementSibling; input.value = ''; input.focus();\"\n          v-else-if=\"Inputtype == 'text'\">highlight_off</span>\n        <span class=\"material-icons g-icons\" v-if=\"Inputtype == 'password'\" @click=\"showPassword()\">{{visibility}}</span>\n        <!-- <span class=\"material-icons\" v-if=\"Inputtype == 'date'\">calendar_today</span> -->\n      </div>\n    </form>\n    <div class=\"g-under-input\" v-if=\"under\">\n      <form class=\"g-under-checkbox\" v-if=\"underbox\">\n        <input type=\"checkbox\">\n        <span>記住我的資料</span>\n      </form>\n      <span class=\"g-input-tip\">{{tip}}</span>\n    </div>\n\n  </div>\n  <div class=\"g-form-item\" v-else-if=\"type == 'check'\">\n    <label class=\"g-checkbtn\">\n      <input :type=\"Inputtype\" :class=\"{'is-check' : style == 'check'}\" :id=\"radioId\" :name=\"Inputtype\" value=\"\"\n        :checked=\"clicked\">\n      <span class=\"g-check-text\" :for=\"radioId\">{{text}}</span>\n      <input type=\"text\" v-if=\"write\">\n    </label>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'FormInput',\n    props: {\n      'type': {\n        type: Object,\n        required: true,\n      },\n      'Inputtype': {\n        type: String,\n        required: false,\n        default: 'text'\n      },\n      'text': {\n        type: String,\n        required: true,\n      },\n      'Btntext': {\n        type: String,\n        required: false,\n      },\n      'tip': {\n        type: String,\n        required: false,\n      },\n      'status': {\n        type: Object,\n        required: false,\n      },\n      'errorvalue': {\n        type: String,\n        required: false,\n      },\n      'innerBtn': {\n        type: Boolean,\n        required: false\n      },\n      'style': {\n        type: Object,\n        required: false,\n      },\n      'radioId': {\n        type: String,\n        required: false,\n      },\n      'clicked': {\n        type: Boolean,\n        required: false,\n      },\n      'name': {\n        type: String,\n        required: false,\n      },\n      'under': {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      'underbox': {\n        type: Boolean,\n        required: false,\n      },\n\n\n    },\n\n    data() {\n      return {\n        value: '',\n        visibility: 'visibility',\n        btnclick:true\n      }\n    },\n    methods: {\n      ErrorValue() {\n        if (this.$props.status == 'error') {\n          return this.$props.errorvalue\n        }\n      },\n      VerifyCode() {\n        if (!this.btnclick) {\n          return this.$props.Btntext = '重新發送(153)'\n        } else {\n          return this.$props.Btntext\n        }\n      },\n      showPassword() {\n        const input = this.previousElement.$ref.input;\n        if (input.$props.Inputtype == 'password') {\n          input.$props.Inputtype = 'text'\n          this.visibility = 'visibility_off'\n        } else {\n          input.$props.Inputtype = 'password'\n          this.visibility = 'visibility'\n        }\n      }\n\n    },\n    computed: {\n\n    }\n\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n  @import '@/global/scss/footer.scss';\n</style>"]},"metadata":{},"sourceType":"module"}
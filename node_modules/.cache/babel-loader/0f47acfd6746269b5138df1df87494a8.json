{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"data-text\"];\nconst _hoisted_2 = [\"type\", \"placeholder\"];\nconst _hoisted_3 = {\n  class: \"g-right-things\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"material-icons is-error\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"material-icons is-correct\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"g-btn g-btn-big g-btn-main\"\n};\nconst _hoisted_7 = {\n  key: 4,\n  class: \"material-icons g-clean\",\n  onclick: \"var input = this.parentElement.previousElementSibling; input.value = ''; input.focus();\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"material-icons\"\n}, \"visibility\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  class: \"g-input-tip\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"g-form-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.type == 'innerwords' ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"g-form-item\", {\n      'is-error': $props.status == 'error'\n    }])\n  }, [_createElementVNode(\"form\", {\n    class: \"g-input-type\",\n    \"data-text\": $props.text\n  }, [_createElementVNode(\"input\", {\n    type: $props.Inputtype,\n    placeholder: $options.ErrorValue()\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [$props.status == 'error' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"error\")) : $props.status == 'checked' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"check\")) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [], 64\n  /* STABLE_FRAGMENT */\n  )), $props.innerBtn ? (_openBlock(), _createElementBlock(\"button\", _hoisted_6, \"獲取手機驗證碼\")) : $props.Inputtype == 'text' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"highlight_off\")) : _createCommentVNode(\"v-if\", true), _hoisted_8])], 8\n  /* PROPS */\n  , _hoisted_1), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($props.tip), 1\n  /* TEXT */\n  )], 2\n  /* CLASS */\n  )) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10));\n}","map":{"version":3,"mappings":";;;;EAIWA,KAAK,EAAC;;;;EACHA,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;;EAEJA,KAAK,EAAC;;;;EACRA,KAAK,EAAC;EAAyBC,OAAO,EAAC;;;gCAC7CC,oBAA8C,MAA9C,EAA8C;EAAxCF,KAAK,EAAC;AAAkC,CAA9C,EAA6B,YAA7B,EAAuC;AAAA;AAAvC;;;EAKEA,KAAK,EAAC;;;;EAETA,KAAK,EAAC;;;SAhB8DG,eAAI,8BAA7EC,oBAeM,KAfN,EAeM;UAAA;IAfDJ,KAAK,mBAAC,aAAD,EAAc;MAAA,YAAuBG,iBAAM;IAA7B,CAAd;EAeJ,CAfN,GACED,oBAYO,MAZP,EAYO;IAZDF,KAAK,EAAC,cAYL;IAZqB,aAAWG;EAYhC,CAZP,GACED,oBAAqD,OAArD,EAAqD;IAA7CG,IAAI,EAAEF,gBAAuC;IAA3BG,WAAW,EAAEC;EAAc,CAArD;;EAAA,eACAL,oBAOM,KAPN,cAOM,CANwCC,iBAAM,yBAAlDC,oBAA2E,MAA3E,cAA+D,OAA/D,KACmDD,iBAAM,2BAAzDC,oBAAoF,MAApF,cAAwE,OAAxE,oBACAA,oBAA4BI,SAA5B,EAA4B;IAAAC;EAAA,CAA5B,EAA4B,EAA5B,EAA4B;EAAA;EAA5B,EAII,EAH6CN,iCAAjDC,oBAA2E,QAA3E,cAA2D,SAA3D,KACkJD,oBAAS,wBAA3JC,oBAA2L,MAA3L,cAAuK,eAAvK,sCAEI,EADJM,UACI,CAPN,EAFF;;EAAA,eAaAR,oBAAwC,MAAxC,cAAwCS,iBAAZR,UAAY,CAAxC,EAA+B;EAAA;EAA/B,EAdF;;EAAA,oBAgBAC,oBACM,KADN","names":["class","onclick","_createElementVNode","$props","_createElementBlock","type","placeholder","$options","_Fragment","key","_hoisted_8","_toDisplayString"],"sourceRoot":"","sources":["D:\\Mywork\\simplemart\\src\\global\\components\\form\\input.vue"],"sourcesContent":["<template>\n  <div class=\"g-form-item\" :class=\"{'is-error' : status == 'error'}\" v-if=\"type == 'innerwords'\">\n    <form class=\"g-input-type\" :data-text=\"text\">\n      <input :type=\"Inputtype\" :placeholder=\"ErrorValue()\">\n      <div class=\"g-right-things\">\n        <span class=\"material-icons is-error\" v-if=\"status == 'error'\">error</span>\n        <span class=\"material-icons is-correct\" v-else-if=\"status == 'checked'\">check</span>\n        <template v-else></template>\n        <button class=\"g-btn g-btn-big g-btn-main\" v-if=\"innerBtn\">獲取手機驗證碼</button>\n        <span class=\"material-icons g-clean\" onclick=\"var input = this.parentElement.previousElementSibling; input.value = ''; input.focus();\" v-else-if=\"Inputtype == 'text'\">highlight_off</span>\n        <span class=\"material-icons\">visibility</span>\n      </div>\n\n\n    </form>\n    <span class=\"g-input-tip\">{{tip}}</span>\n  </div>\n  <div class=\"g-form-item\" v-else>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'FormInput',\n    props: {\n      'type': {\n        type: Object,\n        required: true,\n      },\n      'Inputtype': {\n        type: String,\n        required: false,\n        default:'text'\n      },\n      'text': {\n        type: String,\n        required: true,\n      },\n      'tip': {\n        type: String,\n        required: true,\n      },\n      'status': {\n        type: Object,\n        required: true,\n      },\n      'errorvalue': {\n        type: String,\n        required: true,\n      },\n      'innerBtn': {\n        type: Boolean,\n        required: false\n      },\n\n    },\n\n    data() {\n      return {\n        value: ''\n      }\n    },\n    methods: {\n      ErrorValue() {\n        if (this.$props.status == 'error') {\n          return this.$props.errorvalue\n        }\n      },\n      CleanInput() {\n        var input = this.previousElementSibling; \n        input.value = ''; \n        input.focus();\n      },\n      showPassword() {\n      if(this.$propstype === 'password') {\n        this.type = 'text'\n        this.btnText = 'Hide Password'\n      } else {\n        this.type = 'password'\n        this.btnText = 'Show Password'\n      }\n    }\n\n    },\n    computed: {\n\n    }\n\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n  @import '@/global/scss/footer.scss';\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default {\n  name: 'FormInput',\n  props: {\n    'type': {\n      type: Object,\n      required: true\n    },\n    'text': {\n      type: String,\n      required: true\n    },\n    'tip': {\n      type: String,\n      required: true\n    },\n    'status': {\n      type: Object,\n      required: true\n    },\n    'errorvalue': {\n      type: String,\n      required: true\n    },\n    'errorvalue': {\n      type: String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      value: ''\n    };\n  },\n\n  methods: {\n    ErrorValue() {\n      if (this.$props.status == 'error') {\n        return this.$props.errorvalue;\n      }\n    },\n\n    CleanInput() {\n      var input = this.previousElementSibling;\n      input.value = '';\n      input.focus();\n    }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":"AAsBE,eAAe;EACbA,IAAI,EAAE,WADO;EAEbC,KAAK,EAAE;IACL,QAAQ;MACNC,IAAI,EAAEC,MADA;MAENC,QAAQ,EAAE;IAFJ,CADH;IAKL,QAAQ;MACNF,IAAI,EAAEG,MADA;MAEND,QAAQ,EAAE;IAFJ,CALH;IASL,OAAO;MACLF,IAAI,EAAEG,MADD;MAELD,QAAQ,EAAE;IAFL,CATF;IAaL,UAAU;MACRF,IAAI,EAAEC,MADE;MAERC,QAAQ,EAAE;IAFF,CAbL;IAiBL,cAAc;MACZF,IAAI,EAAEG,MADM;MAEZD,QAAQ,EAAE;IAFE,CAjBT;IAqBL,cAAc;MACZF,IAAI,EAAEG,MADM;MAEZD,QAAQ,EAAE;IAFE;EArBT,CAFM;;EA8BbE,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD,CAlCY;;EAmCbC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,KAAKC,MAAL,CAAYC,MAAZ,IAAsB,OAA1B,EAAmC;QACjC,OAAO,KAAKD,MAAL,CAAYE,UAAnB;MACF;IACD,CALM;;IAMPC,UAAU,GAAG;MACX,IAAIC,KAAI,GAAI,KAAKC,sBAAjB;MACAD,KAAK,CAACP,KAAN,GAAc,EAAd;MACAO,KAAK,CAACE,KAAN;IACF;;EAVO,CAnCI;EAgDbC,QAAQ,EAAE;AAhDG,CAAf","names":["name","props","type","Object","required","String","data","value","methods","ErrorValue","$props","status","errorvalue","CleanInput","input","previousElementSibling","focus","computed"],"sourceRoot":"","sources":["D:\\Mywork\\simplemart\\src\\global\\components\\form\\input.vue"],"sourcesContent":["<template>\n  <div class=\"g-form-item\" :class=\"{'is-error' : status == 'error'}\" v-if=\"type == 'innerwords'\">\n    <form class=\"g-input-type\" :data-text=\"text\">\n      <input type=\"text\" :placeholder=\"ErrorValue()\">\n      \n      <div class=\"g-right-things\">\n        <span class=\"material-icons is-error\" v-if=\"status == 'error'\">error</span>\n        <span class=\"material-icons is-correct\" v-else-if=\"status == 'checked'\">check</span>\n        <template v-else></template>\n        <span class=\"material-icons g-clean\" onclick=\"var input = this.parentElement.previousElementSibling; input.value = ''; input.focus();\">highlight_off</span>\n        <button class=\"g-btn g-btn-big g-btn-main\" v-if=\"innerBtn\">獲取手機驗證碼</button>\n      </div>\n\n\n    </form>\n    <span class=\"g-input-tip\">{{tip}}</span>\n  </div>\n  <div class=\"g-form-item\" v-else>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'FormInput',\n    props: {\n      'type': {\n        type: Object,\n        required: true,\n      },\n      'text': {\n        type: String,\n        required: true,\n      },\n      'tip': {\n        type: String,\n        required: true,\n      },\n      'status': {\n        type: Object,\n        required: true,\n      },\n      'errorvalue': {\n        type: String,\n        required: true,\n      },\n      'errorvalue': {\n        type: String,\n        required: true,\n      },\n\n    },\n\n    data() {\n      return {\n        value: ''\n      }\n    },\n    methods: {\n      ErrorValue() {\n        if (this.$props.status == 'error') {\n          return this.$props.errorvalue\n        }\n      },\n      CleanInput() {\n        var input = this.previousElementSibling; \n        input.value = ''; \n        input.focus();\n      }\n\n    },\n    computed: {\n\n    }\n\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n  @import '@/global/scss/footer.scss';\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"g-modal\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"g-modal-overlay\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"material-icons\"\n}, \"close\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", {\n    class: _normalizeClass([\"g-modal-box\", {\n      'g-modal-normal-sm': $props.modaltype == 'small',\n      'g-modal-normal-lg': $props.modaltype == 'large',\n      'g-modal-normal': $props.modaltype == 'normal',\n      'g-modal-normal-mini': $props.modaltype == 'mini',\n      'g-modal-no-padding': $props.paddingstyle == 'mini'\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"g-modal-title\", {\n      'no-padding': $props.paddingstyle == 'title-no-padding'\n    }])\n  }, [_renderSlot(_ctx.$slots, \"header\", {}, () => [_createTextVNode(_toDisplayString($props.modaltitle), 1\n  /* TEXT */\n  )])], 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"g-modal-content\", {\n      'g-bottom-line-style': $props.contentstyle == 'top-line',\n      'no-padding': $props.paddingstyle == 'content-no-padding'\n    }])\n  }, [_renderSlot(_ctx.$slots, \"content\")], 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"g-modal-footer\", {\n      'g-bottom-line-style': $props.contentstyle == 'top-line',\n      'no-padding': $props.paddingstyle == 'footer-no-padding'\n    }])\n  }, [_renderSlot(_ctx.$slots, \"footer\")], 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: \"g-modal-close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, _hoisted_4)], 2\n  /* CLASS */\n  )]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAAmC,KAAnC,EAAmC;EAA9BD,KAAK,EAAC;AAAwB,CAAnC,EAA4B,IAA5B,EAA4B;AAAA;AAA5B;;gCAYQC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAA6B,OAA7B,EAAkC;AAAA;AAAlC;;oBAAAE;;uBAbZC,oBAiBM,KAjBN,cAiBM,CAhBFC,UAgBE,EAfFH,oBAaM,KAbN,EAaM;IAbDD,KAAK,mBAAC,aAAD,EAAc;MAAA,qBAA+BK,oBAAS,OAAxC;MAAwC,qBAAiCA,oBAAS,OAAlF;MAAkF,kBAA8BA,oBAAS,QAAzH;MAAyH,uBAAoCA,oBAAS,MAAtK;MAAsK,sBAAiCA,uBAAY;IAAnN,CAAd;EAaJ,CAbN,GACIJ,oBAEM,KAFN,EAEM;IAFDD,KAAK,mBAAC,eAAD,EAAgB;MAAA,cAAyBK,uBAAY;IAArC,CAAhB;EAEJ,CAFN,GACIC,YAAyCC,WAAzC,EAAyC,QAAzC,EAAyC,EAAzC,QAAyC,mCAAnBF,oBAAU;EAAA;GAAS,CAAzC,EADJ;;EAAA,GAGAJ,oBAEM,KAFN,EAEM;IAFDD,KAAK,mBAAC,iBAAD,EAAkB;MAAA,uBAAkCK,uBAAY,UAA9C;MAA8C,cAA+BA,uBAAY;IAAzF,CAAlB;EAEJ,CAFN,GACIC,YAA4BC,WAA5B,EAA4B,SAA5B,EADJ;;EAAA,GAGAN,oBAEM,KAFN,EAEM;IAFDD,KAAK,mBAAC,gBAAD,EAAiB;MAAA,uBAAkCK,uBAAY,UAA9C;MAA8C,cAA+BA,uBAAY;IAAzF,CAAjB;EAEJ,CAFN,GACIC,YAA2BC,WAA3B,EAA2B,QAA3B,EADJ;;EAAA,GAGAN,oBAEM,KAFN,EAEM;IAFDD,KAAK,EAAC,eAEL;IAFsBQ,OAAK,sCAAED,WAAK,OAAL,CAAF;EAE3B,CAFN,cAVJ;;EAAA,CAeE,CAjBN","names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_2","$props","_renderSlot","_ctx","onClick"],"sourceRoot":"","sources":["D:\\Mywork\\simplemart\\src\\global\\components\\modal\\ModalRegular.vue"],"sourcesContent":["<template>\n    <div class=\"g-modal\">\n        <div class=\"g-modal-overlay\"></div>\n        <div class=\"g-modal-box\" :class=\"{'g-modal-normal-sm': modaltype == 'small','g-modal-normal-lg': modaltype == 'large','g-modal-normal': modaltype == 'normal','g-modal-normal-mini': modaltype == 'mini','g-modal-no-padding': paddingstyle == 'mini' }\">\n            <div class=\"g-modal-title\" :class=\"{'no-padding' : paddingstyle == 'title-no-padding'}\">\n                <slot name=\"header\">{{modaltitle}}</slot>\n            </div>\n            <div class=\"g-modal-content\" :class=\"{'g-bottom-line-style' : contentstyle == 'top-line', 'no-padding' : paddingstyle == 'content-no-padding'}\">\n                <slot name=\"content\"></slot>\n            </div>\n            <div class=\"g-modal-footer\" :class=\"{'g-bottom-line-style' : contentstyle == 'top-line', 'no-padding' : paddingstyle == 'footer-no-padding'}\">\n                <slot name=\"footer\"></slot>\n            </div>\n            <div class=\"g-modal-close\" @click=\"$emit('close')\">\n                <span class=\"material-icons\">close</span>\n            </div>\n        </div>\n\n    </div>\n\n</template>\n\n<script>\n\n\n    export default {\n        name: 'ModalRegular',\n        components: {\n            \n        },\n        props: {\n            'modaltitle': {\n                type: String,\n                defalut: 'title',\n            },\n            'modalcontent': {\n                type: String,\n                default: 'content',\n            },\n            'modalfooter': {\n                type: Array,\n            },\n            'modaltype': {\n                type: String,\n            },\n            'contentstyle': {\n                type: String,\n            },\n            'paddingstyle': {\n                type: Object,\n                require: false\n            },\n        },\n        data() {\n            return {\n                \n            }\n        },\n        methods: {\n            deleteDevice(index) {\n                this.$delete(index);\n            },\n\n        },\n    };\n</script>"]},"metadata":{},"sourceType":"module"}